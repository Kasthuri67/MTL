--version 1
create or replace task all_data_changes
    warehouse = COMPUTE_WH
    schedule = '1440 MINUTE'
    when SYSTEM$STREAM_HAS_DATA('ORDER_STREAMS')
as
merge into sl_orderdetails slo
using(with cte_stream as (
    select
        customer_no,
        company_name,
        product_group_code,
        invoice_no,
        invoice_date,
        csp_yes_no,
        type,
        uom,
        quantity,
        kgs,
        insert_date,
        update_date,
        METADATA$ACTION,
        METADATA$ISUPDATE,
    
    row_number() over(partition by invoice_no, invoice_date, customer_no, company_name, product_group_code, CSP_YES_NO,  uom, quantity,kgs
        order by invoice_no, invoice_date, customer_no, company_name, product_group_code, CSP_YES_NO,  uom, quantity, type, kgs, insert_date, update_date desc) as row_num from bz_orderdetails_st) 
    select * from cte_stream where row_num = 1) as sto
        
    on hash (sto.INVOICE_NO, sto.Product_Group_Code) = 
       hash (slo.INVOICE_NO, slo.Product_Group_Code)
    
    -- delete condition
    when matched
        and sto.METADATA$ACTION = 'DELETE'
        and sto.METADATA$ISUPDATE = 'TRUE'
        then delete
    -- update condition
    when matched
        and sto.METADATA$ACTION = 'INSERT'
        and sto.METADATA$ISUPDATE = 'TRUE'
        and hash (sto.customer_no, sto.company_name,  to_date(sto.invoice_date),  sto.csp_yes_no, sto.type, sto.uom, to_number(sto.quantity),to_number(sto.kgs), sto.insert_date, sto.update_date) <>
       hash (slo.customer_no, slo.company_name, slo.invoice_date, slo.csp_yes_no, slo.type, slo.uom, slo.quantity, slo.kgs, slo.insert_date, slo.update_date)
        then update
        set 
            slo.customer_no = sto.customer_no,
            slo.company_name = sto.company_name,
            slo.product_group_code = sto.product_group_code,
            slo.invoice_no = sto.invoice_no,
            slo.invoice_date = sto.invoice_date,
            slo.csp_yes_no = sto.csp_yes_no,
            slo.type = sto.type,
            slo.uom = sto.uom,
            slo.quantity = sto.quantity,
            slo.kgs = sto.kgs,
            slo.insert_date = sto.insert_date,
            slo.update_date = sto.update_date
    -- insert condition
    when not matched
        and sto.METADATA$ACTION = 'INSERT'
        and sto.METADATA$ISUPDATE = 'FALSE'
        then insert
            (slo.customer_no, slo.company_name, slo.product_group_code, slo.invoice_no, slo.invoice_date, slo.csp_yes_no, slo.type, slo.uom, slo.quantity, slo.kgs, slo.insert_date, slo.update_date)
        values
            (sto.customer_no, sto.company_name, sto.product_group_code, sto.invoice_no, sto.invoice_date, sto.csp_yes_no, sto.type, sto.uom, sto.quantity, sto.kgs, sto.insert_date, sto.update_date);

--version 2


CREATE OR REPLACE TASK TK_BZ_SL_ORDER
    WAREHOUSE = MTL_DEV_WH
    SCHEDULE = '1440 MINUTE'
AS
INSERT INTO SL_ORDERDETAILS (--MTL_DEV_DB.MTL_SILVER.SL_ORDERDETAILS (
    CUSTOMER_NO,
    COMPANY_NAME,
    PRODUCT_GROUP_CODE,
    INVOICE_NO,
    INVOICE_DATE,
    CSP_YES_NO,
    TYPE,
    UOM,
    QUANTITY,
    KGS,
    INSERT_DATE,
    UPDATE_DATE
)
SELECT
    CUSTOMER_NO,
    COMPANY_NAME,
    PRODUCT_GROUP_CODE,
    INVOICE_NO,
    INVOICE_DATE,
    CSP_YES_NO,
    TYPE,
    UOM,
    QUANTITY,
    KGS,
    INSERT_DATE,
    UPDATE_DATE
FROM (
    WITH CTE_STREAM AS (
        SELECT
            CUSTOMER_NO,
            COMPANY_NAME,
            PRODUCT_GROUP_CODE,
            INVOICE_NO,
            INVOICE_DATE,
            CSP_YES_NO,
            TYPE,
            UOM,
            QUANTITY,
            KGS,
            INSERT_DATE,
            UPDATE_DATE,
            
            ROW_NUMBER() OVER (
                PARTITION BY
                    INVOICE_NO, INVOICE_DATE, CUSTOMER_NO, COMPANY_NAME, PRODUCT_GROUP_CODE, CSP_YES_NO, UOM, QUANTITY, KGS
                ORDER BY
                    INVOICE_NO, INVOICE_DATE, CUSTOMER_NO, COMPANY_NAME, PRODUCT_GROUP_CODE, CSP_YES_NO, UOM, QUANTITY, TYPE, KGS, INSERT_DATE, UPDATE_DATE DESC
            ) AS ROW_NUM
        FROM
            MTL_DEV_DB.MTL_BRONZE.BZ_ORDERDETAILS_ST
    )
    SELECT * FROM CTE_STREAM WHERE ROW_NUM = 1
);